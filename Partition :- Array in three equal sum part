Such that : sum(B[1],..B[i]) = sum(B[i+1],...B[j]) = sum(B[j+1],...B[n]).

First, Calculate prefix sum. and another array which will contain No. of sum/3 occurances.

if(n < 3)   return 0;
if(sum % 3 != 0){
    return 0;
}

int n = A.size();
long long sum = 0;
vector<long long> prefix(n+1 , 0);
for(int i = 1; i <= n ; i++){
    prefix[i] = prefix[i-1] + A[i-1];
    sum += A[i-1];
}


Now, this array contain number of occurances of 1/3rd sum.
vector<int> px(n+1, 0);
for(int i = 1; i<= n ; i++){
    px[i] = px[i-1] + (prefix[i] == sum/3);
}

Now at every index if sum is 2/3rd of total then we count total 1/3rd sum previous and add to count.
int cnt = 0;
for(int i = 2 ; i <= n-1; i++ ){
    if(prefix[i] == 2*sum/3){
        cnt += px[i-1];
    }
}
