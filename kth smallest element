Idea is to use maxheap and limit its size to k. since its size is k and top element will give me the minimum element;

priority_queue<int> mheap;
for(int i = 0; i < n ; i++){

    if(mheap.size() < k){
        mheap.push(arr[i]);
    }
    else if(mheap.top() > arr[i]){
    // if size if greater and top is greater then this top can never be our answer simply pop that. 

        mheap.pop();
        mheap.push(arr[i]);
    }
}
mheap.top() is our answer. 
