Here, Preprocessing row sum and col com;
and at every index calculate BXB matrix;

dp[i][j] contains sum from matrix sum of [0 , 0] to [n , n ]
First, Calculate row sum and then for every index calculate column sum. 



int n = A.size();
vector<vector<int> > dp(n+1 , vector<int>(n+1 , 0));
for(int i = 1; i <= n ; i++){
    for(int j = 1; j <= n ; j++ ){
        dp[i][j] = dp[i][j-1] + A[i-1][j-1];
    }
}
for(int j = 1; j <= n ; j++){
    for(int i = 1; i <= n ; i++ ){
        dp[i][j] += dp[i-1][j];
    }
}
int mx = INT_MIN;
for(int i = B; i <= n; i++){
    for(int j = B; j <=n ; j++){
        mx = max(mx, dp[i][j] - dp[i-B][j] - dp[i][j-B] + dp[i-B][j-B]);
    }
}
return mx;
