maintain three pointer. 
l0 , l1, l2

a1, a2, a3, a4 ........ ... .. .. .. . ar, ar+1,... an
here,
0 -> (l0 - 1) will be all 0
and l0 -> l1 -1 will be all 1
l1 -> l2 will be unknown 
l2 + 1 -> n-1 will be all 2;

so we will operate on l1 to l2 reason.

if current element is zero. swap it will l0 + 1; and increment l1 & l0;
if current is one then l1++
if current is two then first swap with l2 and l2 decrement but l1 not increment why ?? 
Because element at index l2 was unidentified. 
so we dont increase l1


int l0 = -1, l1 = 0, l2 = n-1;
while(l1 <= l2){
    if(arr[l1] == 0){
        swap(arr[++l0], arr[l1]);
        l1++;
    }
    else if(arr[l1] == 2){
        swap(arr[l2--] , arr[l1]);
    }
    else{
        l1++;
    }
}
